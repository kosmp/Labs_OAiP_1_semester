#include <iostream>
#include <cmath>
using namespace std;

int main()
{
    double W, H;
    cin >> W >> H;
    double x1, y1, x2, y2;
    cin >> x1 >> y1 >> x2 >> y2;
    double w, h;
    cin >> w >> h;
    double dist1, dist2, dist3, dist4;

    if (x1 >= w || (W - x2) >= w || (H - y2) >= h || y1 >= h)
    {
        cout << "0, the second table fits into the room without moving the first" << endl;
    }
    else if ((w + x2 - x1) <= W && (h + y2 - y1) <= H)
    {
        if ((W - x2) == x1 && (h - y2) == y1)   // свободные расстояния слева и справа равны + сверху и снизу равны. Если равны справа, слева, снизу, сверху, то min среди одинаковых.
        {
            dist1 = w - x1;
            dist2 = y2 + h - H;
            cout << min(dist1, dist2);
        }   
        else if ((W - x2) > x1 && (h - y2) == y1)   // в таком случае сравнивается расстояние справа и сверху(=снизу)
        {
            dist3 = x2 + w - W;
            dist2 = y2 + h - H;
            cout << min(dist3, dist2);
        }
        else if ((W - x2) == x1 && (h - y2) > y1)   // в таком случае сравниваются расстояния слева(=справа) и сверху
        {
            dist1 = w - x1;
            dist2 = y2 + h - H;
            cout << min(dist1, dist2);
        }
        else if ((W - x2) > x1 && (h - y2) > y1)    // в такой случае сравнивается расстояние сверху и справа. Т.к. места(расстояния) там больше, а значит сдвигать первый стол на меньшее раст.
        {
            dist2 = y2 + h - H;
            dist3 = x2 + w - W;
            cout << min(dist2, dist3);  // можно было объеденить с первым if (== && ==)
        }
        else if ((W - x2) < x1 && (h - y2) == y1)   // в таком случае сравнивается расстояние слева и сверху(=снизу)
        {
            dist1 = w - x1;
            dist2 = y2 + h - H;
            cout << min(dist1, dist2);
        }
        else if ((W - x2) == x1 && (h - y2) < y1)   // в таком случае сравниваются расстояния слева(=справа) и снизу
        {
            dist1 = w - x1;
            dist4 = h - y1;
            cout << min(dist1, dist4);      // можно было объеденить данный блок с верхним (< && ==) т.к. там уместно и dist4
        }
        else if ((W - x2) < x1 && (h - y2) < y1)    // в такой случае сравнивается расстояние cнизу и слева.
        {
            dist1 = w - x1;
            dist4 = h - y1;
            cout << min(dist1, dist4);      // можно было объеденить данный блок с первым if( == && ==) т.к. там уместно  для dist1 dist4
        }

    }
    else if ((w + x2 - x1) <= W)
    {
        if ((W - x2) <= x1)         // вставить можно и справа, и слева, но оба наилучших и единственных варианта. Также учитывается: вставить можно и справа, и слева, но слева наилучший вариант. Сдвиг вправо
        {
            dist1 = w - x1;
            cout << dist1;
        }
        else                        //if ((W - x2) > x1)    // вставить можно и справа, и слева, но справа наилучший вариант. Сдвиг влево
        {
            dist3 = x2 + w - W;
            cout << dist3;
        }
    }
    else if ((h + y2 - y1) <= H)
    {
        if ((h - y2) <= y1)        // вставить можно и сверху, и снизу, но оба наилучших и единственных варианта. Также учитывается: вставить можно и сверху, и снизу, но снизу наилучший вариант. Сдвиг вверх.
        {
            dist4 = h - y1;
            cout << dist4;
        }
        else                        
        {
            dist2 = y2 + h - H;     // сверху, наилучшее место для второго стола, т.к. он сам может занять больше свободного места, по определённой оси, чтобы не пришлось двигать первый стол на большее расстояние. Меньше наложение идёт.
            cout << dist2;
        }
    }
    else
    {
        cout << "-1" << endl;
    }  
}
